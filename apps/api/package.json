{
  "name": "@nestjs-react-boilerplate/api",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "typeorm": "cross-env TS_NODE_TRANSPILE_ONLY=1 TS_NODE_FILES=true TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\",\"target\":\"ES2020\"}' node -r ts-node/register -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "dev": "NODE_ENV=development ts-node-dev --respawn --transpile-only -r dotenv/config src/main.ts",
    "build": "tsc -p tsconfig.build.json",
    "start": "node dist/main.js",
    "test": "vitest run",
    "test:e2e": "NODE_ENV=test vitest run --config ./vitest.e2e.ts",
    "lint": "eslint . --ext .ts,.tsx,.js",
    "lint:fix": "eslint . --ext .ts,.tsx,.js --fix",
    "format": "prettier --check .",
    "format:fix": "prettier --write .",
    "gen": "hygen",
    "gen:all": "ts-node --transpile-only scripts/gen-all.ts",
    "gen:entity": "hygen --templates _templates api-entity new --name",
    "gen:dto": "hygen --templates _templates api-dto new --name",
    "gen:service": "hygen --templates _templates api-service new --name",
    "gen:controller": "hygen --templates _templates api-controller new --name",
    "gen:seed": "hygen --templates _templates api-seed new --name",
    "gen:module": "hygen --templates _templates api-module new --name",
    "db:up": "docker compose -f docker/mysql/docker-compose.yml --env-file .env up -d",
    "db:down": "docker compose -f docker/mysql/docker-compose.yml --env-file .env down",
    "db:reset": "docker compose -f docker/mysql/docker-compose.yml --env-file .env down -v && docker compose -f docker/mysql/docker-compose.yml --env-file .env up -d",
    "db:logs": "docker compose -f docker/mysql/docker-compose.yml --env-file .env logs -f",
    "db:ps": "docker compose -f docker/mysql/docker-compose.yml --env-file .env ps",
    "db:shell": "docker exec -it org_health_db sh",
    "db:mysql:verify": "docker exec -it org_health_db sh -lc 'mysql -uroot -p\"$DB_PASSWORD\" -e \"SHOW DATABASES;\"'",
    "db:ready": "bash -lc 'set -a && source .env && set +a; docker exec -e MYSQL_PWD=\"$DB_PASSWORD\" org_health_db sh -lc \"until mysqladmin ping -h 127.0.0.1 -uroot --silent; do echo waiting for mysql; sleep 1; done\"'",
    "db:migration:generate": "bash -lc 'NAME=\"$1\"; [ -n \"$NAME\" ] || { echo \"Usage: pnpm db:migration:generate <Name>\"; exit 1; }; npm run typeorm -- --dataSource=./src/database/data-source.ts migration:generate src/database/migrations/$NAME' --",
    "db:migration:create": "bash -lc 'NAME=\"$1\"; [ -n \"$NAME\" ] || { echo \"Usage: pnpm db:migration:create <Name>\"; exit 1; }; npm run typeorm -- migration:create src/database/migrations/$NAME' --",
    "db:migration:run": "npm run typeorm -- --dataSource=./src/database/data-source.ts migration:run",
    "db:migration:revert": "npm run typeorm -- --dataSource=src/database/data-source.ts migration:revert",
    "db:schema:drop": "npm run typeorm -- --dataSource=src/database/data-source.ts schema:drop",
    "db:migrate:test:run": "cross-env NODE_ENV=test DOTENV_CONFIG_PATH=.env.test NODE_OPTIONS='-r ts-node/register' typeorm migration:run -d src/data-source.ts",
    "db:show": "cross-env DOTENV_CONFIG_PATH=.env NODE_OPTIONS='-r ts-node/register' typeorm migration:show -d src/data-source.ts",
    "db:seed": "cross-env TS_NODE_TRANSPILE_ONLY=1 node -r ts-node/register -r tsconfig-paths/register ./src/database/seeds/seed.ts",
    "db:seed:clear": "cross-env TS_NODE_TRANSPILE_ONLY=1 node -r ts-node/register -r tsconfig-paths/register ./src/database/seeds/clear.ts"
  },
  "dependencies": {
    "@faker-js/faker": "^9.9.0",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cross-env": "^10.0.0",
    "dotenv": "^17.2.1",
    "fast-glob": "^3.3.3",
    "mysql2": "^3.14.3",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.0",
    "typeorm": "^0.3.25"
  },
  "devDependencies": {
    "@nestjs-react-boilerplate/eslint-config": "workspace:^",
    "@nestjs/testing": "^11.1.6",
    "@swc/core": "^1.13.3",
    "@types/express": "^4.17.21",
    "@types/node": "^20.11.30",
    "@types/supertest": "^2.0.16",
    "@vitest/coverage-v8": "^3.2.4",
    "cross-env-shell": "^7.0.3",
    "env-cmd": "^10.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "execa": "^9.6.0",
    "hygen": "^6.2.11",
    "inquirer": "^12.9.1",
    "prettier": "^3.2.5",
    "supertest": "^7.1.4",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "turbo": "^2.0.3",
    "typescript": "^5.4.5",
    "unplugin-swc": "^1.5.5",
    "vitest": "^3.2.4"
  }
}
